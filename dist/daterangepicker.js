/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/styles/daterangepicker.scss":
/*!************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/styles/daterangepicker.scss ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".daterangepicker {\\n  position: absolute;\\n  display: flex;\\n  color: inherit;\\n  background-color: #fff;\\n  border-radius: 4px;\\n  width: 278px;\\n  padding: 4px;\\n  margin-top: 1px;\\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\\n  top: 100px;\\n  left: 20px;\\n  /* Calendars */ }\\n  .daterangepicker:before, .daterangepicker:after {\\n    position: absolute;\\n    display: inline-block;\\n    border-bottom-color: rgba(0, 0, 0, 0.2);\\n    content: ''; }\\n  .daterangepicker:before {\\n    top: -7px;\\n    border-right: 7px solid transparent;\\n    border-left: 7px solid transparent;\\n    border-bottom: 7px solid #ccc; }\\n  .daterangepicker:after {\\n    top: -6px;\\n    border-right: 6px solid transparent;\\n    border-bottom: 6px solid #fff;\\n    border-left: 6px solid transparent; }\\n  .daterangepicker.opensleft:before {\\n    right: 9px; }\\n  .daterangepicker.opensleft:after {\\n    right: 10px; }\\n  .daterangepicker.openscenter:before {\\n    left: 0;\\n    right: 0;\\n    width: 0;\\n    margin-left: auto;\\n    margin-right: auto; }\\n  .daterangepicker.openscenter:after {\\n    left: 0;\\n    right: 0;\\n    width: 0;\\n    margin-left: auto;\\n    margin-right: auto; }\\n  .daterangepicker.opensright:before {\\n    left: 9px; }\\n  .daterangepicker.opensright:after {\\n    left: 10px; }\\n  .daterangepicker.dropup {\\n    margin-top: -5px; }\\n    .daterangepicker.dropup:before {\\n      top: initial;\\n      bottom: -7px;\\n      border-bottom: initial;\\n      border-top: 7px solid #ccc; }\\n    .daterangepicker.dropup:after {\\n      top: initial;\\n      bottom: -6px;\\n      border-bottom: initial;\\n      border-top: 6px solid #fff; }\\n  .daterangepicker.dropdown-menu {\\n    max-width: none;\\n    z-index: 3001; }\\n  .daterangepicker.hidden {\\n    display: none; }\\n  .daterangepicker.single .ranges, .daterangepicker.single .calendar {\\n    float: none; }\\n  .daterangepicker.show-calendar .calendar, .daterangepicker.show-calendar .actions {\\n    display: block; }\\n  .daterangepicker:not(.show-calendar) .actions {\\n    display: none; }\\n  .daterangepicker .calendar {\\n    display: none;\\n    max-width: 270px;\\n    margin: 4px; }\\n    .daterangepicker .calendar.single .calendar-table {\\n      border: none; }\\n    .daterangepicker .calendar th, .daterangepicker .calendar td {\\n      white-space: nowrap;\\n      text-align: center;\\n      min-width: 32px; }\\n  .daterangepicker .calendar-table {\\n    border: 1px solid #fff;\\n    padding: 4px;\\n    border-radius: 4px;\\n    background-color: #fff; }\\n  .daterangepicker table {\\n    width: 100%;\\n    margin: 0; }\\n  .daterangepicker td, .daterangepicker th {\\n    text-align: center;\\n    width: 20px;\\n    height: 20px;\\n    color: #666;\\n    border-radius: 4px;\\n    border: 1px solid transparent;\\n    white-space: nowrap;\\n    cursor: pointer; }\\n    .daterangepicker td.available:hover, .daterangepicker th.available:hover {\\n      background-color: #eee;\\n      border-color: transparent;\\n      color: inherit; }\\n    .daterangepicker td.week, .daterangepicker th.week {\\n      font-size: 80%;\\n      color: #ccc; }\\n  .daterangepicker td {\\n    color: #8b8b8b;\\n    padding: 5px;\\n    font-size: 12px; }\\n  .daterangepicker td.off, .daterangepicker td.off.in-range, .daterangepicker td.off.start-date, .daterangepicker td.off.end-date {\\n    background-color: #fff;\\n    border-color: transparent;\\n    color: #ddd; }\\n  .daterangepicker td.in-range {\\n    background-color: #EDF2F5;\\n    border-color: transparent;\\n    color: #8b8b8b;\\n    border-radius: 0; }\\n  .daterangepicker td.start-date {\\n    border-radius: 4px 0 0 4px; }\\n  .daterangepicker td.end-date {\\n    border-radius: 0 4px 4px 0; }\\n  .daterangepicker td.start-date.end-date {\\n    border-radius: 4px; }\\n  .daterangepicker td.active, .daterangepicker td.active:hover {\\n    background-color: #82b4d0;\\n    border-color: transparent;\\n    color: #fff; }\\n  .daterangepicker th.month {\\n    width: auto;\\n    padding: 10px; }\\n  .daterangepicker th:not(.month) {\\n    padding: 5px 0;\\n    font-weight: 300; }\\n  .daterangepicker:not(.single) {\\n    padding: 0; }\\n    .daterangepicker:not(.single).show-calendar .container {\\n      padding: 20px; }\\n    .daterangepicker:not(.single) th.month {\\n      font-weigth: 600;\\n      text-align: right; }\\n    .daterangepicker:not(.single) th.prev + .month {\\n      text-align: left; }\\n  .daterangepicker td.disabled, .daterangepicker option.disabled {\\n    color: #999;\\n    cursor: not-allowed;\\n    text-decoration: line-through; }\\n  .daterangepicker select.monthselect, .daterangepicker select.yearselect {\\n    font-size: 12px;\\n    padding: 1px;\\n    height: auto;\\n    margin: 0;\\n    cursor: default; }\\n  .daterangepicker select.monthselect {\\n    margin-right: 2%;\\n    width: 56%; }\\n  .daterangepicker select.yearselect {\\n    width: 40%; }\\n  .daterangepicker select.hourselect, .daterangepicker select.minuteselect, .daterangepicker select.secondselect, .daterangepicker select.ampmselect {\\n    width: 50px;\\n    margin-bottom: 0; }\\n  .daterangepicker .input-mini {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    color: #555;\\n    height: 30px;\\n    line-height: 30px;\\n    display: block;\\n    vertical-align: middle;\\n    margin: 0 0 5px 0;\\n    padding: 0 6px 0 28px;\\n    width: 100%; }\\n    .daterangepicker .input-mini.active {\\n      border: 1px solid #81b5d0;\\n      border-radius: 4px; }\\n  .daterangepicker .daterangepicker_input {\\n    position: relative; }\\n  .daterangepicker.rtl .input-mini {\\n    padding-right: 28px;\\n    padding-left: 6px; }\\n  .daterangepicker.rtl .daterangepicker_input i {\\n    left: auto;\\n    right: 8px; }\\n  .daterangepicker .calendar-time {\\n    margin: 15px auto 0;\\n    padding: 7px 10px;\\n    display: flex;\\n    align-items: center;\\n    text-align: center;\\n    color: #999;\\n    border: 1px solid #ddd;\\n    border-radius: 4px; }\\n    .daterangepicker .calendar-time .icon {\\n      height: auto; }\\n    .daterangepicker .calendar-time select {\\n      height: auto;\\n      color: rgba(0, 0, 0, 0.87);\\n      background-color: #fff;\\n      border: none; }\\n      .daterangepicker .calendar-time select.disabled {\\n        color: #ccc;\\n        cursor: not-allowed; }\\n\\n.ranges {\\n  padding: 15px 0;\\n  font-size: 11px;\\n  float: none;\\n  text-align: left;\\n  background-color: #fff; }\\n  .ranges ul {\\n    list-style: none;\\n    margin: 0 auto;\\n    padding: 0;\\n    width: 100%; }\\n  .ranges li {\\n    font-size: 14px;\\n    color: rgba(0, 0, 0, 0.54);\\n    padding: 9px 30px;\\n    cursor: pointer; }\\n    .ranges li:hover {\\n      color: rgba(0, 0, 0, 0.75); }\\n    .ranges li.active {\\n      color: rgba(0, 0, 0, 0.75); }\\n\\n.actions {\\n  text-align: right; }\\n  .actions button.ui.button {\\n    margin: 0 5px; }\\n\\nbutton.hidden {\\n  display: none !important; }\\n\\n/*  Larger Screen Styling */\\n@media (min-width: 564px) {\\n  .daterangepicker {\\n    width: auto; }\\n    .daterangepicker .ranges ul {\\n      width: 160px; }\\n    .daterangepicker.single .ranges ul {\\n      width: 100%; }\\n    .daterangepicker.single .calendar.left {\\n      clear: none; }\\n    .daterangepicker.single.ltr .ranges, .daterangepicker.single.ltr .calendar {\\n      float: left; }\\n    .daterangepicker.single.rtl .ranges, .daterangepicker.single.rtl .calendar {\\n      float: right; }\\n    .daterangepicker.ltr {\\n      direction: ltr;\\n      text-align: left; }\\n      .daterangepicker.ltr .calendar.left {\\n        clear: left;\\n        margin-right: 0; }\\n        .daterangepicker.ltr .calendar.left .calendar-table {\\n          border-right: none;\\n          border-top-right-radius: 0;\\n          border-bottom-right-radius: 0; }\\n      .daterangepicker.ltr .calendar.right {\\n        margin-left: 0; }\\n        .daterangepicker.ltr .calendar.right .calendar-table {\\n          border-left: none;\\n          border-top-left-radius: 0;\\n          border-bottom-left-radius: 0; }\\n      .daterangepicker.ltr .left .daterangepicker_input {\\n        padding-right: 12px; }\\n      .daterangepicker.ltr .calendar.left .calendar-table {\\n        padding-right: 12px; }\\n      .daterangepicker.ltr .ranges, .daterangepicker.ltr .calendar {\\n        float: left; }\\n    .daterangepicker.rtl {\\n      direction: rtl;\\n      text-align: right; }\\n      .daterangepicker.rtl .calendar.left {\\n        clear: right;\\n        margin-left: 0; }\\n        .daterangepicker.rtl .calendar.left .calendar-table {\\n          border-left: none;\\n          border-top-left-radius: 0;\\n          border-bottom-left-radius: 0; }\\n      .daterangepicker.rtl .calendar.right {\\n        margin-right: 0; }\\n        .daterangepicker.rtl .calendar.right .calendar-table {\\n          border-right: none;\\n          border-top-right-radius: 0;\\n          border-bottom-right-radius: 0; }\\n      .daterangepicker.rtl .left .daterangepicker_input {\\n        padding-left: 12px; }\\n      .daterangepicker.rtl .calendar.left .calendar-table {\\n        padding-left: 12px; }\\n      .daterangepicker.rtl .ranges, .daterangepicker.rtl .calendar {\\n        text-align: right;\\n        float: right; } }\\n\\n@media (min-width: 730px) {\\n  .daterangepicker .ranges {\\n    width: auto; }\\n  .daterangepicker.ltr .ranges {\\n    float: left; }\\n  .daterangepicker.rtl .ranges {\\n    float: right; }\\n  .daterangepicker .calendar.left {\\n    clear: none !important; } }\\n\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/styles/daterangepicker.scss?./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_daterangepicker_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/daterangepicker.scss */ \"./src/styles/daterangepicker.scss\");\n/* harmony import */ var _styles_daterangepicker_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_styles_daterangepicker_scss__WEBPACK_IMPORTED_MODULE_0__);\n\n\n(function () {\n  var DateRangePicker = function(element, options, cb) {\n    //default settings for options\n    this.parentEl = 'body';\n    this.element = $(element);\n    this.startDate = moment().startOf('day');\n    this.endDate = moment().endOf('day');\n    this.minDate = false;\n    this.maxDate = false;\n    this.dateLimit = false;\n    this.autoApply = false;\n    this.singleDatePicker = false;\n    this.showDropdowns = false;\n    this.showWeekNumbers = false;\n    this.showISOWeekNumbers = false;\n    this.showCustomRangeLabel = true;\n    this.timePicker = false;\n    this.timePicker24Hour = false;\n    this.timePickerIncrement = 1;\n    this.timePickerSeconds = false;\n    this.linkedCalendars = true;\n    this.autoUpdateInput = true;\n    this.alwaysShowCalendars = false;\n    this.ranges = {};\n\n    this.opens = 'right';\n    if (this.element.hasClass('pull-right'))\n      this.opens = 'left';\n\n    this.drops = 'down';\n    if (this.element.hasClass('dropup'))\n      this.drops = 'up';\n\n    this.buttonClasses = 'ui button tiny';\n    this.applyClass = 'ui button positive';\n    this.cancelClass = 'ui button basic';\n\n    this.locale = {\n      direction: 'ltr',\n      format: moment.localeData().longDateFormat('L'),\n      separator: ' - ',\n      applyLabel: 'Apply',\n      cancelLabel: 'Cancel',\n      weekLabel: 'W',\n      customRangeLabel: 'Custom Range',\n      daysOfWeek: moment.weekdaysMin(),\n      monthNames: moment.monthsShort(),\n      firstDay: moment.localeData().firstDayOfWeek()\n    };\n\n    this.callback = function() { };\n\n    //some state information\n    this.isShowing = false;\n    this.leftCalendar = {};\n    this.rightCalendar = {};\n\n    //custom options from user\n    if (typeof options !== 'object' || options === null)\n      options = {};\n\n    //allow setting options with data attributes\n    //data-api options will be overwritten with custom javascript options\n    options = $.extend(this.element.data(), options);\n\n    //html template for the picker UI\n    if (typeof options.template !== 'string' && !(options.template instanceof $))\n      options.template = '<div class=\"daterangepicker hidden\">' +\n          '<div class=\"container\">' +\n              '<div class=\"calendar left\">' +\n                  '<div class=\"daterangepicker_input\">' +\n                    '<div class=\"left icon ui input fluid small\">' +\n                      '<input class=\"\" type=\"text\" name=\"daterangepicker_start\" value=\"\" />' +\n                      '<i class=\"icon calendar\"></i>' +\n                    '</div>' +\n                    '<div class=\"calendar-time\">' +\n                      '<i class=\"icon clock\"></i>' +\n                      '<div></div>' +\n                    '</div>' +\n                  '</div>' +\n                  '<div class=\"calendar-table\"></div>' +\n              '</div>' +\n              '<div class=\"calendar right\">' +\n                  '<div class=\"daterangepicker_input\">' +\n                    '<div class=\"left icon ui input fluid small\">' +\n                      '<input class=\"\" type=\"text\" name=\"daterangepicker_end\" value=\"\" />' +\n                      '<i class=\"icon calendar\"></i>' +\n                    '</div>' +\n                    '<div class=\"calendar-time\">' +\n                      '<i class=\"icon clock\"></i>' +\n                      '<div></div>' +\n                    '</div>' +\n                  '</div>' +\n                  '<div class=\"calendar-table\"></div>' +\n              '</div>' +\n              '<div class=\"actions\">' +\n                  '<button class=\"cancelBtn\" type=\"button\"></button>' +\n                  '<button class=\"applyBtn\" disabled=\"disabled\" type=\"button\"></button> ' +\n              '</div>' +\n          '</div>' +\n          '<div class=\"ranges\">' +\n          '</div>' +\n      '</div>';\n\n    this.parentEl = (options.parentEl && $(options.parentEl).length) ? $(options.parentEl) : $(this.parentEl);\n    this.container = $(options.template).appendTo(this.parentEl);\n\n    //\n    // handle all the possible options overriding defaults\n    //\n\n    if (typeof options.locale === 'object') {\n\n        if (typeof options.locale.direction === 'string')\n          this.locale.direction = options.locale.direction;\n\n        if (typeof options.locale.format === 'string')\n          this.locale.format = options.locale.format;\n\n        if (typeof options.locale.separator === 'string')\n          this.locale.separator = options.locale.separator;\n\n        if (typeof options.locale.daysOfWeek === 'object')\n          this.locale.daysOfWeek = options.locale.daysOfWeek.slice();\n\n        if (typeof options.locale.monthNames === 'object')\n          this.locale.monthNames = options.locale.monthNames.slice();\n\n        if (typeof options.locale.firstDay === 'number')\n          this.locale.firstDay = options.locale.firstDay;\n\n        if (typeof options.locale.applyLabel === 'string')\n          this.locale.applyLabel = options.locale.applyLabel;\n\n        if (typeof options.locale.cancelLabel === 'string')\n          this.locale.cancelLabel = options.locale.cancelLabel;\n\n        if (typeof options.locale.weekLabel === 'string')\n          this.locale.weekLabel = options.locale.weekLabel;\n\n        if (typeof options.locale.customRangeLabel === 'string'){\n          //Support unicode chars in the custom range name.\n          var elem = document.createElement('textarea');\n          elem.innerHTML = options.locale.customRangeLabel;\n          var rangeHtml = elem.value;\n          this.locale.customRangeLabel = rangeHtml;\n        }\n    }\n    this.container.addClass(this.locale.direction);\n\n    if (typeof options.startDate === 'string')\n      this.startDate = moment(options.startDate, this.locale.format);\n\n    if (typeof options.endDate === 'string')\n      this.endDate = moment(options.endDate, this.locale.format);\n\n    if (typeof options.minDate === 'string')\n      this.minDate = moment(options.minDate, this.locale.format);\n\n    if (typeof options.maxDate === 'string')\n      this.maxDate = moment(options.maxDate, this.locale.format);\n\n    if (typeof options.startDate === 'object')\n      this.startDate = moment(options.startDate);\n\n    if (typeof options.endDate === 'object')\n      this.endDate = moment(options.endDate);\n\n    if (typeof options.minDate === 'object')\n      this.minDate = moment(options.minDate);\n\n    if (typeof options.maxDate === 'object')\n      this.maxDate = moment(options.maxDate);\n\n    // sanity check for bad options\n    if (this.minDate && this.startDate.isBefore(this.minDate))\n      this.startDate = this.minDate.clone();\n\n    // sanity check for bad options\n    if (this.maxDate && this.endDate.isAfter(this.maxDate))\n      this.endDate = this.maxDate.clone();\n\n    if (typeof options.applyClass === 'string')\n      this.applyClass = options.applyClass;\n\n    if (typeof options.cancelClass === 'string')\n      this.cancelClass = options.cancelClass;\n\n    if (typeof options.dateLimit === 'object')\n      this.dateLimit = options.dateLimit;\n\n    if (typeof options.opens === 'string')\n      this.opens = options.opens;\n\n    if (typeof options.drops === 'string')\n      this.drops = options.drops;\n\n    if (typeof options.showWeekNumbers === 'boolean')\n      this.showWeekNumbers = options.showWeekNumbers;\n\n    if (typeof options.showISOWeekNumbers === 'boolean')\n      this.showISOWeekNumbers = options.showISOWeekNumbers;\n\n    if (typeof options.buttonClasses === 'string')\n      this.buttonClasses = options.buttonClasses;\n\n    if (typeof options.buttonClasses === 'object')\n      this.buttonClasses = options.buttonClasses.join(' ');\n\n    if (typeof options.showDropdowns === 'boolean')\n      this.showDropdowns = options.showDropdowns;\n\n    if (typeof options.showCustomRangeLabel === 'boolean')\n      this.showCustomRangeLabel = options.showCustomRangeLabel;\n\n    if (typeof options.singleDatePicker === 'boolean') {\n      this.singleDatePicker = options.singleDatePicker;\n      if (this.singleDatePicker)\n        this.endDate = this.startDate.clone();\n    }\n\n    if (typeof options.timePicker === 'boolean')\n      this.timePicker = options.timePicker;\n\n    if (typeof options.timePickerSeconds === 'boolean')\n      this.timePickerSeconds = options.timePickerSeconds;\n\n    if (typeof options.timePickerIncrement === 'number')\n      this.timePickerIncrement = options.timePickerIncrement;\n\n    if (typeof options.timePicker24Hour === 'boolean')\n      this.timePicker24Hour = options.timePicker24Hour;\n\n    if (typeof options.autoApply === 'boolean')\n      this.autoApply = options.autoApply;\n\n    if (typeof options.autoUpdateInput === 'boolean')\n      this.autoUpdateInput = options.autoUpdateInput;\n\n    if (typeof options.linkedCalendars === 'boolean')\n      this.linkedCalendars = options.linkedCalendars;\n\n    if (typeof options.isInvalidDate === 'function')\n      this.isInvalidDate = options.isInvalidDate;\n\n    if (typeof options.isCustomDate === 'function')\n      this.isCustomDate = options.isCustomDate;\n\n    if (typeof options.alwaysShowCalendars === 'boolean')\n      this.alwaysShowCalendars = options.alwaysShowCalendars;\n\n    // update day names order to firstDay\n    if (this.locale.firstDay != 0) {\n      var iterator = this.locale.firstDay;\n      while (iterator > 0) {\n        this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift());\n        iterator--;\n      }\n    }\n\n    var start, end, range;\n\n    //if no start/end dates set, check if an input element contains initial values\n    if (typeof options.startDate === 'undefined' && typeof options.endDate === 'undefined') {\n      if ($(this.element).is('input[type=text]')) {\n        var val = $(this.element).val(),\n          split = val.split(this.locale.separator);\n\n        start = end = null;\n\n        if (split.length == 2) {\n          start = moment(split[0], this.locale.format);\n          end = moment(split[1], this.locale.format);\n        } else if (this.singleDatePicker && val !== \"\") {\n          start = moment(val, this.locale.format);\n          end = moment(val, this.locale.format);\n        }\n        if (start !== null && end !== null) {\n          this.setStartDate(start);\n          this.setEndDate(end);\n        }\n      }\n    }\n\n    if (typeof options.ranges === 'object') {\n      for (range in options.ranges) {\n        if (typeof options.ranges[range][0] === 'string')\n          start = moment(options.ranges[range][0], this.locale.format);\n        else\n          start = moment(options.ranges[range][0]);\n\n        if (typeof options.ranges[range][1] === 'string')\n          end = moment(options.ranges[range][1], this.locale.format);\n        else\n          end = moment(options.ranges[range][1]);\n\n        // If the start or end date exceed those allowed by the minDate or dateLimit\n        // options, shorten the range to the allowable period.\n        if (this.minDate && start.isBefore(this.minDate))\n          start = this.minDate.clone();\n\n        var maxDate = this.maxDate;\n        if (this.dateLimit && maxDate && start.clone().add(this.dateLimit).isAfter(maxDate))\n            maxDate = start.clone().add(this.dateLimit);\n        if (maxDate && end.isAfter(maxDate))\n            end = maxDate.clone();\n\n        // If the end of the range is before the minimum or the start of the range is\n        // after the maximum, don't display this range option at all.\n        if ((this.minDate && end.isBefore(this.minDate, this.timepicker ? 'minute' : 'day'))\n          || (maxDate && start.isAfter(maxDate, this.timepicker ? 'minute' : 'day')))\n          continue;\n\n        //Support unicode chars in the range names.\n        var elem = document.createElement('textarea');\n        elem.innerHTML = range;\n        var rangeHtml = elem.value;\n\n        this.ranges[rangeHtml] = [start, end];\n      }\n\n      var list = '<ul>';\n      for (range in this.ranges) {\n        list += '<li data-range-key=\"' + range + '\">' + range + '</li>';\n      }\n      if (this.showCustomRangeLabel) {\n        list += '<li data-range-key=\"' + this.locale.customRangeLabel + '\">' + this.locale.customRangeLabel + '</li>';\n      }\n      list += '</ul>';\n      this.container.find('.ranges').prepend(list);\n    }\n\n    if (typeof cb === 'function') {\n      this.callback = cb;\n    }\n\n    if (!this.timePicker) {\n      this.startDate = this.startDate.startOf('day');\n      this.endDate = this.endDate.endOf('day');\n      this.container.find('.calendar-time').hide();\n    }\n\n    //can't be used together for now\n    if (this.timePicker && this.autoApply)\n      this.autoApply = false;\n\n    if (this.autoApply && typeof options.ranges !== 'object') {\n      this.container.find('.ranges').hide();\n    } else if (this.autoApply) {\n      this.container.find('.applyBtn, .cancelBtn').addClass('hidden');\n    }\n\n    if (this.singleDatePicker) {\n      this.container.addClass('single');\n      this.container.find('.calendar.left').addClass('single');\n      this.container.find('.calendar.left').show();\n      this.container.find('.calendar.right').hide();\n      this.container.find('.daterangepicker_input input, .daterangepicker_input input + i').hide();\n      if (this.timePicker) {\n        this.container.find('.ranges ul').hide();\n      } else {\n        this.container.find('.ranges, .actions').hide();\n      }\n    }\n\n    if ((typeof options.ranges === 'undefined' && !this.singleDatePicker) && this.alwaysShowCalendars) {\n      this.container.addClass('show-calendar');\n      this.container.removeClass('hidden');\n    }\n\n    this.container.addClass('opens' + this.opens);\n\n    //swap the position of the predefined ranges if opens right\n    if (typeof options.ranges !== 'undefined' && this.opens == 'right') {\n      this.container.find('.ranges').prependTo( this.container.find('.container').parent() );\n    }\n\n    //apply CSS classes and labels to buttons\n    this.container.find('.applyBtn, .cancelBtn').addClass(this.buttonClasses);\n    if (this.applyClass.length)\n      this.container.find('.applyBtn').addClass(this.applyClass);\n    if (this.cancelClass.length)\n      this.container.find('.cancelBtn').addClass(this.cancelClass);\n    this.container.find('.applyBtn').html(this.locale.applyLabel);\n    this.container.find('.cancelBtn').html(this.locale.cancelLabel);\n\n    //\n    // event listeners\n    //\n\n    this.container.find('.calendar')\n      .on('click.daterangepicker', '.prev', $.proxy(this.clickPrev, this))\n      .on('click.daterangepicker', '.next', $.proxy(this.clickNext, this))\n      .on('mousedown.daterangepicker', 'td.available', $.proxy(this.clickDate, this))\n      .on('mouseenter.daterangepicker', 'td.available', $.proxy(this.hoverDate, this))\n      .on('mouseleave.daterangepicker', 'td.available', $.proxy(this.updateFormInputs, this))\n      .on('change.daterangepicker', 'select.yearselect', $.proxy(this.monthOrYearChanged, this))\n      .on('change.daterangepicker', 'select.monthselect', $.proxy(this.monthOrYearChanged, this))\n      .on('change.daterangepicker', 'select.hourselect,select.minuteselect,select.secondselect,select.ampmselect', $.proxy(this.timeChanged, this))\n      .on('click.daterangepicker', '.daterangepicker_input input', $.proxy(this.showCalendars, this))\n      .on('focus.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsFocused, this))\n      .on('blur.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsBlurred, this))\n      .on('change.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsChanged, this))\n      .on('keydown.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsKeydown, this));\n\n    this.container.find('.ranges')\n        .on('click.daterangepicker', 'li', $.proxy(this.clickRange, this))\n        .on('mouseenter.daterangepicker', 'li', $.proxy(this.hoverRange, this))\n        .on('mouseleave.daterangepicker', 'li', $.proxy(this.updateFormInputs, this));\n\n    this.container.find('.actions')\n        .on('click.daterangepicker', 'button.applyBtn', $.proxy(this.clickApply, this))\n        .on('click.daterangepicker', 'button.cancelBtn', $.proxy(this.clickCancel, this));\n\n    if (this.element.is('input') || this.element.is('button')) {\n      this.element.on({\n        'click.daterangepicker': $.proxy(this.show, this),\n        'focus.daterangepicker': $.proxy(this.show, this),\n        'keyup.daterangepicker': $.proxy(this.elementChanged, this),\n        'keydown.daterangepicker': $.proxy(this.keydown, this) //IE 11 compatibility\n      });\n    } else {\n      this.element.on('click.daterangepicker', $.proxy(this.toggle, this));\n      this.element.on('keydown.daterangepicker', $.proxy(this.toggle, this));\n    }\n\n    //\n    // if attached to a text input, set the initial value\n    //\n\n    if (this.element.is('input') && !this.singleDatePicker && this.autoUpdateInput) {\n        this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format));\n        this.element.trigger('change');\n    } else if (this.element.is('input') && this.autoUpdateInput) {\n        this.element.val(this.startDate.format(this.locale.format));\n        this.element.trigger('change');\n    }\n\n  };\n\n  DateRangePicker.prototype = {\n\n    constructor: DateRangePicker,\n\n    setStartDate: function(startDate) {\n      if (typeof startDate === 'string')\n        this.startDate = moment(startDate, this.locale.format);\n\n      if (typeof startDate === 'object')\n        this.startDate = moment(startDate);\n\n      if (!this.timePicker)\n        this.startDate = this.startDate.startOf('day');\n\n      if (this.timePicker && this.timePickerIncrement)\n        this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\n\n      if (this.minDate && this.startDate.isBefore(this.minDate)) {\n        this.startDate = this.minDate.clone();\n        if (this.timePicker && this.timePickerIncrement)\n          this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\n      }\n\n      if (this.maxDate && this.startDate.isAfter(this.maxDate)) {\n        this.startDate = this.maxDate.clone();\n        if (this.timePicker && this.timePickerIncrement)\n          this.startDate.minute(Math.floor(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\n      }\n\n      if (!this.isShowing)\n          this.updateElement();\n\n      this.updateMonthsInView();\n    },\n\n    setEndDate: function(endDate) {\n      if (typeof endDate === 'string')\n        this.endDate = moment(endDate, this.locale.format);\n\n      if (typeof endDate === 'object')\n        this.endDate = moment(endDate);\n\n      if (!this.timePicker)\n        this.endDate = this.endDate.add(1,'d').startOf('day').subtract(1,'second');\n\n      if (this.timePicker && this.timePickerIncrement)\n        this.endDate.minute(Math.round(this.endDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);\n\n      if (this.endDate.isBefore(this.startDate))\n        this.endDate = this.startDate.clone();\n\n      if (this.maxDate && this.endDate.isAfter(this.maxDate))\n        this.endDate = this.maxDate.clone();\n\n      if (this.dateLimit && this.startDate.clone().add(this.dateLimit).isBefore(this.endDate))\n        this.endDate = this.startDate.clone().add(this.dateLimit);\n\n      this.previousRightTime = this.endDate.clone();\n\n      if (!this.isShowing)\n        this.updateElement();\n\n      this.updateMonthsInView();\n    },\n\n    isInvalidDate: function() {\n      return false;\n    },\n\n    isCustomDate: function() {\n      return false;\n    },\n\n    updateView: function() {\n      if (this.timePicker) {\n        this.renderTimePicker('left');\n        this.renderTimePicker('right');\n        if (!this.endDate) {\n          this.container.find('.right .calendar-time select').attr('disabled', 'disabled').addClass('disabled');\n        } else {\n          this.container.find('.right .calendar-time select').removeAttr('disabled').removeClass('disabled');\n        }\n      }\n      if (this.endDate) {\n        this.container.find('input[name=\"daterangepicker_end\"]').removeClass('active');\n        this.container.find('input[name=\"daterangepicker_start\"]').addClass('active');\n      } else {\n        this.container.find('input[name=\"daterangepicker_end\"]').addClass('active');\n        this.container.find('input[name=\"daterangepicker_start\"]').removeClass('active');\n      }\n      this.updateMonthsInView();\n      this.updateCalendars();\n      this.updateFormInputs();\n    },\n\n    updateMonthsInView: function() {\n      if (this.endDate) {\n\n        //if both dates are visible already, do nothing\n        if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month &&\n          (this.startDate.format('YYYY-MM') == this.leftCalendar.month.format('YYYY-MM') || this.startDate.format('YYYY-MM') == this.rightCalendar.month.format('YYYY-MM'))\n          &&\n          (this.endDate.format('YYYY-MM') == this.leftCalendar.month.format('YYYY-MM') || this.endDate.format('YYYY-MM') == this.rightCalendar.month.format('YYYY-MM'))\n          ) {\n          return;\n        }\n\n        this.leftCalendar.month = this.startDate.clone().date(2);\n        if (!this.linkedCalendars && (this.endDate.month() != this.startDate.month() || this.endDate.year() != this.startDate.year())) {\n          this.rightCalendar.month = this.endDate.clone().date(2);\n        } else {\n          this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');\n        }\n\n      } else {\n        if (this.leftCalendar.month.format('YYYY-MM') != this.startDate.format('YYYY-MM') && this.rightCalendar.month.format('YYYY-MM') != this.startDate.format('YYYY-MM')) {\n          this.leftCalendar.month = this.startDate.clone().date(2);\n          this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');\n        }\n      }\n      if (this.maxDate && this.linkedCalendars && !this.singleDatePicker && this.rightCalendar.month > this.maxDate) {\n        this.rightCalendar.month = this.maxDate.clone().date(2);\n        this.leftCalendar.month = this.maxDate.clone().date(2).subtract(1, 'month');\n      }\n    },\n\n    updateCalendars: function() {\n      if (this.timePicker) {\n        var hour, minute, second;\n        if (this.endDate) {\n          hour = parseInt(this.container.find('.left .hourselect').val(), 10);\n          minute = parseInt(this.container.find('.left .minuteselect').val(), 10);\n          second = this.timePickerSeconds ? parseInt(this.container.find('.left .secondselect').val(), 10) : 0;\n          if (!this.timePicker24Hour) {\n              var ampm = this.container.find('.left .ampmselect').val();\n              if (ampm === 'PM' && hour < 12)\n                hour += 12;\n              if (ampm === 'AM' && hour === 12)\n                hour = 0;\n          }\n        } else {\n          hour = parseInt(this.container.find('.right .hourselect').val(), 10);\n          minute = parseInt(this.container.find('.right .minuteselect').val(), 10);\n          second = this.timePickerSeconds ? parseInt(this.container.find('.right .secondselect').val(), 10) : 0;\n          if (!this.timePicker24Hour) {\n              var ampm = this.container.find('.right .ampmselect').val();\n              if (ampm === 'PM' && hour < 12)\n                hour += 12;\n              if (ampm === 'AM' && hour === 12)\n                hour = 0;\n          }\n        }\n        this.leftCalendar.month.hour(hour).minute(minute).second(second);\n        this.rightCalendar.month.hour(hour).minute(minute).second(second);\n      }\n\n      this.renderCalendar('left');\n      this.renderCalendar('right');\n\n      //highlight any predefined range matching the current start and end dates\n      this.container.find('.ranges li').removeClass('active');\n      if (this.endDate == null) return;\n\n      this.calculateChosenLabel();\n    },\n\n    renderCalendar: function(side) {\n\n        //\n        // Build the matrix of dates that will populate the calendar\n        //\n\n        var calendar = side == 'left' ? this.leftCalendar : this.rightCalendar;\n        var month = calendar.month.month();\n        var year = calendar.month.year();\n        var hour = calendar.month.hour();\n        var minute = calendar.month.minute();\n        var second = calendar.month.second();\n        var daysInMonth = moment([year, month]).daysInMonth();\n        var firstDay = moment([year, month, 1]);\n        var lastDay = moment([year, month, daysInMonth]);\n        var lastMonth = moment(firstDay).subtract(1, 'month').month();\n        var lastYear = moment(firstDay).subtract(1, 'month').year();\n        var daysInLastMonth = moment([lastYear, lastMonth]).daysInMonth();\n        var dayOfWeek = firstDay.day();\n\n        //initialize a 6 rows x 7 columns array for the calendar\n        var calendar = [];\n        calendar.firstDay = firstDay;\n        calendar.lastDay = lastDay;\n\n        for (var i = 0; i < 6; i++) {\n            calendar[i] = [];\n        }\n\n        //populate the calendar with date objects\n        var startDay = daysInLastMonth - dayOfWeek + this.locale.firstDay + 1;\n        if (startDay > daysInLastMonth)\n            startDay -= 7;\n\n        if (dayOfWeek == this.locale.firstDay)\n            startDay = daysInLastMonth - 6;\n\n        var curDate = moment([lastYear, lastMonth, startDay, 12, minute, second]);\n\n        var col, row;\n        for (var i = 0, col = 0, row = 0; i < 42; i++, col++, curDate = moment(curDate).add(24, 'hour')) {\n            if (i > 0 && col % 7 === 0) {\n                col = 0;\n                row++;\n            }\n            calendar[row][col] = curDate.clone().hour(hour).minute(minute).second(second);\n            curDate.hour(12);\n\n            if (this.minDate && calendar[row][col].format('YYYY-MM-DD') == this.minDate.format('YYYY-MM-DD') && calendar[row][col].isBefore(this.minDate) && side == 'left') {\n                calendar[row][col] = this.minDate.clone();\n            }\n\n            if (this.maxDate && calendar[row][col].format('YYYY-MM-DD') == this.maxDate.format('YYYY-MM-DD') && calendar[row][col].isAfter(this.maxDate) && side == 'right') {\n                calendar[row][col] = this.maxDate.clone();\n            }\n\n        }\n\n        //make the calendar object available to hoverDate/clickDate\n        if (side == 'left') {\n            this.leftCalendar.calendar = calendar;\n        } else {\n            this.rightCalendar.calendar = calendar;\n        }\n\n        //\n        // Display the calendar\n        //\n\n        var minDate = side == 'left' ? this.minDate : this.startDate;\n        var maxDate = this.maxDate;\n        var selected = side == 'left' ? this.startDate : this.endDate;\n        var arrow = this.locale.direction == 'ltr' ? {left: 'angle left', right: 'angle right'} : {left: 'angle right', right: 'angle left'};\n\n        var html = '<table class=\"table-condensed\">';\n        html += '<thead>';\n        html += '<tr>';\n\n        // add empty cell for week number\n        if (this.showWeekNumbers || this.showISOWeekNumbers)\n            html += '<th></th>';\n\n        if ((!minDate || minDate.isBefore(calendar.firstDay)) && (!this.linkedCalendars || side == 'left')) {\n            html += '<th class=\"prev available\"><i class=\"icon ' + arrow.left + '\"></i></th>';\n        } else {\n            html += '<th></th>';\n        }\n\n        var dateHtml = this.locale.monthNames[calendar[1][1].month()] + calendar[1][1].format(\" YYYY\");\n\n        if (this.showDropdowns) {\n            var currentMonth = calendar[1][1].month();\n            var currentYear = calendar[1][1].year();\n            var maxYear = (maxDate && maxDate.year()) || (currentYear + 5);\n            var minYear = (minDate && minDate.year()) || (currentYear - 50);\n            var inMinYear = currentYear == minYear;\n            var inMaxYear = currentYear == maxYear;\n\n            var monthHtml = '<select class=\"monthselect ui dropdown small\">';\n            for (var m = 0; m < 12; m++) {\n                if ((!inMinYear || m >= minDate.month()) && (!inMaxYear || m <= maxDate.month())) {\n                    monthHtml += \"<option value='\" + m + \"'\" +\n                        (m === currentMonth ? \" selected='selected'\" : \"\") +\n                        \">\" + this.locale.monthNames[m] + \"</option>\";\n                } else {\n                    monthHtml += \"<option value='\" + m + \"'\" +\n                        (m === currentMonth ? \" selected='selected'\" : \"\") +\n                        \" disabled='disabled'>\" + this.locale.monthNames[m] + \"</option>\";\n                }\n            }\n            monthHtml += \"</select>\";\n\n            var yearHtml = '<select class=\"yearselect ui dropdown small\">';\n            for (var y = minYear; y <= maxYear; y++) {\n                yearHtml += '<option value=\"' + y + '\"' +\n                    (y === currentYear ? ' selected=\"selected\"' : '') +\n                    '>' + y + '</option>';\n            }\n            yearHtml += '</select>';\n\n            dateHtml = monthHtml + yearHtml;\n        }\n\n        html += '<th colspan=\"5\" class=\"month\">' + dateHtml + '</th>';\n        if ((!maxDate || maxDate.isAfter(calendar.lastDay)) && (!this.linkedCalendars || side == 'right' || this.singleDatePicker)) {\n            html += '<th class=\"next available\"><i class=\"icon ' + arrow.right + '\"></i></th>';\n        } else {\n            html += '<th></th>';\n        }\n\n        html += '</tr>';\n        html += '<tr>';\n\n        // add week number label\n        if (this.showWeekNumbers || this.showISOWeekNumbers)\n            html += '<th class=\"week\">' + this.locale.weekLabel + '</th>';\n\n        $.each(this.locale.daysOfWeek, function(index, dayOfWeek) {\n            html += '<th>' + dayOfWeek + '</th>';\n        });\n\n        html += '</tr>';\n        html += '</thead>';\n        html += '<tbody>';\n\n        //adjust maxDate to reflect the dateLimit setting in order to\n        //grey out end dates beyond the dateLimit\n        if (this.endDate == null && this.dateLimit) {\n            var maxLimit = this.startDate.clone().add(this.dateLimit).endOf('day');\n            if (!maxDate || maxLimit.isBefore(maxDate)) {\n                maxDate = maxLimit;\n            }\n        }\n\n        for (var row = 0; row < 6; row++) {\n            html += '<tr>';\n\n            // add week number\n            if (this.showWeekNumbers)\n                html += '<td class=\"week\">' + calendar[row][0].week() + '</td>';\n            else if (this.showISOWeekNumbers)\n                html += '<td class=\"week\">' + calendar[row][0].isoWeek() + '</td>';\n\n            for (var col = 0; col < 7; col++) {\n\n                var classes = [];\n\n                //highlight today's date\n                if (calendar[row][col].isSame(new Date(), \"day\"))\n                    classes.push('today');\n\n                //highlight weekends\n                if (calendar[row][col].isoWeekday() > 5)\n                    classes.push('weekend');\n\n                //grey out the dates in other months displayed at beginning and end of this calendar\n                if (calendar[row][col].month() != calendar[1][1].month())\n                    classes.push('off');\n\n                //don't allow selection of dates before the minimum date\n                if (this.minDate && calendar[row][col].isBefore(this.minDate, 'day'))\n                    classes.push('off', 'disabled');\n\n                //don't allow selection of dates after the maximum date\n                if (maxDate && calendar[row][col].isAfter(maxDate, 'day'))\n                    classes.push('off', 'disabled');\n\n                //don't allow selection of date if a custom function decides it's invalid\n                if (this.isInvalidDate(calendar[row][col]))\n                    classes.push('off', 'disabled');\n\n                //highlight the currently selected start date\n                if (calendar[row][col].format('YYYY-MM-DD') == this.startDate.format('YYYY-MM-DD'))\n                    classes.push('active', 'start-date');\n\n                //highlight the currently selected end date\n                if (this.endDate != null && calendar[row][col].format('YYYY-MM-DD') == this.endDate.format('YYYY-MM-DD'))\n                    classes.push('active', 'end-date');\n\n                //highlight dates in-between the selected dates\n                if (this.endDate != null && calendar[row][col] > this.startDate && calendar[row][col] < this.endDate)\n                    classes.push('in-range');\n\n                //apply custom classes for this date\n                var isCustom = this.isCustomDate(calendar[row][col]);\n                if (isCustom !== false) {\n                    if (typeof isCustom === 'string')\n                        classes.push(isCustom);\n                    else\n                        Array.prototype.push.apply(classes, isCustom);\n                }\n\n                var cname = '', disabled = false;\n                for (var i = 0; i < classes.length; i++) {\n                    cname += classes[i] + ' ';\n                    if (classes[i] == 'disabled')\n                        disabled = true;\n                }\n                if (!disabled)\n                    cname += 'available';\n\n                html += '<td class=\"' + cname.replace(/^\\s+|\\s+$/g, '') + '\" data-title=\"' + 'r' + row + 'c' + col + '\">' + calendar[row][col].date() + '</td>';\n\n            }\n            html += '</tr>';\n        }\n\n        html += '</tbody>';\n        html += '</table>';\n\n        this.container.find('.calendar.' + side + ' .calendar-table').html(html);\n\n    },\n\n    renderTimePicker: function(side) {\n      // Don't bother updating the time picker if it's currently disabled\n      // because an end date hasn't been clicked yet\n      if (side == 'right' && !this.endDate) return;\n\n      var html, selected, minDate, maxDate = this.maxDate;\n\n      if (this.dateLimit && (!this.maxDate || this.startDate.clone().add(this.dateLimit).isAfter(this.maxDate)))\n        maxDate = this.startDate.clone().add(this.dateLimit);\n\n      if (side == 'left') {\n        selected = this.startDate.clone();\n        minDate = this.minDate;\n      } else if (side == 'right') {\n        selected = this.endDate.clone();\n        minDate = this.startDate;\n\n        //Preserve the time already selected\n        var timeSelector = this.container.find('.calendar.right .calendar-time div');\n        if (timeSelector.html() != '') {\n\n          selected.hour(timeSelector.find('.hourselect option:selected').val() || selected.hour());\n          selected.minute(timeSelector.find('.minuteselect option:selected').val() || selected.minute());\n          selected.second(timeSelector.find('.secondselect option:selected').val() || selected.second());\n\n          if (!this.timePicker24Hour) {\n            var ampm = timeSelector.find('.ampmselect option:selected').val();\n            if (ampm === 'PM' && selected.hour() < 12)\n              selected.hour(selected.hour() + 12);\n            if (ampm === 'AM' && selected.hour() === 12)\n              selected.hour(0);\n          }\n\n        }\n\n        if (selected.isBefore(this.startDate))\n          selected = this.startDate.clone();\n\n        if (maxDate && selected.isAfter(maxDate))\n          selected = maxDate.clone();\n\n      }\n\n      //\n      // hours\n      //\n\n      html = '<select class=\"hourselect ui dropdown\">';\n\n      var start = this.timePicker24Hour ? 0 : 1;\n      var end = this.timePicker24Hour ? 23 : 12;\n\n      for (var i = start; i <= end; i++) {\n        var i_in_24 = i;\n        if (!this.timePicker24Hour)\n          i_in_24 = selected.hour() >= 12 ? (i == 12 ? 12 : i + 12) : (i == 12 ? 0 : i);\n\n        var time = selected.clone().hour(i_in_24);\n        var disabled = false;\n        if (minDate && time.minute(59).isBefore(minDate))\n          disabled = true;\n        if (maxDate && time.minute(0).isAfter(maxDate))\n          disabled = true;\n\n        if (i_in_24 == selected.hour() && !disabled) {\n          html += '<option value=\"' + i + '\" selected=\"selected\">' + i + '</option>';\n        } else if (disabled) {\n          html += '<option value=\"' + i + '\" disabled=\"disabled\" class=\"disabled\">' + i + '</option>';\n        } else {\n          html += '<option value=\"' + i + '\">' + i + '</option>';\n        }\n      }\n\n      html += '</select> ';\n\n      //\n      // minutes\n      //\n\n      html += ': <select class=\"minuteselect ui dropdown\">';\n\n      for (var i = 0; i < 60; i += this.timePickerIncrement) {\n        var padded = i < 10 ? '0' + i : i;\n        var time = selected.clone().minute(i);\n\n        var disabled = false;\n        if (minDate && time.second(59).isBefore(minDate))\n          disabled = true;\n        if (maxDate && time.second(0).isAfter(maxDate))\n          disabled = true;\n\n        if (selected.minute() == i && !disabled) {\n          html += '<option value=\"' + i + '\" selected=\"selected\">' + padded + '</option>';\n        } else if (disabled) {\n          html += '<option value=\"' + i + '\" disabled=\"disabled\" class=\"disabled\">' + padded + '</option>';\n        } else {\n          html += '<option value=\"' + i + '\">' + padded + '</option>';\n        }\n      }\n\n      html += '</select> ';\n\n      //\n      // seconds\n      //\n\n      if (this.timePickerSeconds) {\n        html += ': <select class=\"secondselect ui dropdown\">';\n\n        for (var i = 0; i < 60; i++) {\n          var padded = i < 10 ? '0' + i : i;\n          var time = selected.clone().second(i);\n\n          var disabled = false;\n          if (minDate && time.isBefore(minDate))\n            disabled = true;\n          if (maxDate && time.isAfter(maxDate))\n            disabled = true;\n\n          if (selected.second() == i && !disabled) {\n            html += '<option value=\"' + i + '\" selected=\"selected\">' + padded + '</option>';\n          } else if (disabled) {\n            html += '<option value=\"' + i + '\" disabled=\"disabled\" class=\"disabled\">' + padded + '</option>';\n          } else {\n            html += '<option value=\"' + i + '\">' + padded + '</option>';\n          }\n        }\n\n        html += '</select> ';\n      }\n\n      //\n      // AM/PM\n      //\n\n      if (!this.timePicker24Hour) {\n        html += '<select class=\"ampmselect\">';\n\n        var am_html = '';\n        var pm_html = '';\n\n        if (minDate && selected.clone().hour(12).minute(0).second(0).isBefore(minDate))\n          am_html = ' disabled=\"disabled\" class=\"disabled\"';\n\n        if (maxDate && selected.clone().hour(0).minute(0).second(0).isAfter(maxDate))\n          pm_html = ' disabled=\"disabled\" class=\"disabled\"';\n\n        if (selected.hour() >= 12) {\n          html += '<option value=\"AM\"' + am_html + '>AM</option><option value=\"PM\" selected=\"selected\"' + pm_html + '>PM</option>';\n        } else {\n          html += '<option value=\"AM\" selected=\"selected\"' + am_html + '>AM</option><option value=\"PM\"' + pm_html + '>PM</option>';\n        }\n\n        html += '</select>';\n      }\n\n      this.container.find('.calendar.' + side + ' .calendar-time div').html(html);\n\n    },\n\n    updateFormInputs: function() {\n\n      //ignore mouse movements while an above-calendar text input has focus\n      if (this.container.find('input[name=daterangepicker_start]').is(\":focus\") || this.container.find('input[name=daterangepicker_end]').is(\":focus\"))\n        return;\n\n      this.container.find('input[name=daterangepicker_start]').val(this.startDate.format(this.locale.format));\n      if (this.endDate)\n        this.container.find('input[name=daterangepicker_end]').val(this.endDate.format(this.locale.format));\n\n      if (this.singleDatePicker || (this.endDate && (this.startDate.isBefore(this.endDate) || this.startDate.isSame(this.endDate)))) {\n        this.container.find('button.applyBtn').removeAttr('disabled');\n      } else {\n        this.container.find('button.applyBtn').attr('disabled', 'disabled');\n      }\n\n    },\n\n    move: function() {\n      var parentOffset = { top: 0, left: 0 },\n        containerTop;\n      var parentRightEdge = $(window).width();\n      if (!this.parentEl.is('body')) {\n        parentOffset = {\n          top: this.parentEl.offset().top - this.parentEl.scrollTop(),\n          left: this.parentEl.offset().left - this.parentEl.scrollLeft()\n        };\n        parentRightEdge = this.parentEl[0].clientWidth + this.parentEl.offset().left;\n      }\n\n      if (this.drops == 'up')\n        containerTop = this.element.offset().top - this.container.outerHeight() - parentOffset.top;\n      else\n        containerTop = this.element.offset().top + this.element.outerHeight() - parentOffset.top;\n      this.container[this.drops == 'up' ? 'addClass' : 'removeClass']('dropup');\n\n      if (this.opens == 'left') {\n        this.container.css({\n          top: containerTop,\n          right: parentRightEdge - this.element.offset().left - this.element.outerWidth(),\n          left: 'auto'\n        });\n        if (this.container.offset().left < 0) {\n          this.container.css({\n            right: 'auto',\n            left: 9\n          });\n        }\n      } else if (this.opens == 'center') {\n        this.container.css({\n          top: containerTop,\n          left: this.element.offset().left - parentOffset.left + this.element.outerWidth() / 2\n                  - this.container.outerWidth() / 2,\n          right: 'auto'\n        });\n        if (this.container.offset().left < 0) {\n          this.container.css({\n            right: 'auto',\n            left: 9\n          });\n        }\n      } else {\n        this.container.css({\n          top: containerTop,\n          left: this.element.offset().left - parentOffset.left,\n          right: 'auto'\n        });\n        if (this.container.offset().left + this.container.outerWidth() > $(window).width()) {\n          this.container.css({\n            left: 'auto',\n            right: 0\n          });\n        }\n      }\n    },\n\n    show: function(e) {\n      if (this.isShowing) return;\n\n      // Create a click proxy that is private to this instance of datepicker, for unbinding\n      this._outsideClickProxy = $.proxy(function(e) { this.outsideClick(e); }, this);\n\n      // Bind global datepicker mousedown for hiding and\n      $(document)\n        .on('mousedown.daterangepicker', this._outsideClickProxy)\n        // also support mobile devices\n        .on('touchend.daterangepicker', this._outsideClickProxy)\n        // also explicitly play nice with Bootstrap dropdowns, which stopPropagation when clicking them\n        .on('click.daterangepicker', '[data-toggle=dropdown]', this._outsideClickProxy)\n        // and also close when focus changes to outside the picker (eg. tabbing between controls)\n        .on('focusin.daterangepicker', this._outsideClickProxy);\n\n      // Reposition the picker if the window is resized while it's open\n      $(window).on('resize.daterangepicker', $.proxy(function(e) { this.move(e); }, this));\n\n      this.oldStartDate = this.startDate.clone();\n      this.oldEndDate = this.endDate.clone();\n      this.previousRightTime = this.endDate.clone();\n\n      this.updateView();\n      this.container.css('display', 'flex');\n      this.move();\n      this.element.trigger('show.daterangepicker', this);\n      this.isShowing = true;\n    },\n\n    hide: function(e) {\n      if (!this.isShowing) return;\n\n      //incomplete date selection, revert to last values\n      if (!this.endDate) {\n        this.startDate = this.oldStartDate.clone();\n        this.endDate = this.oldEndDate.clone();\n      }\n\n      //if a new date range was selected, invoke the user callback function\n      if (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate))\n        this.callback(this.startDate, this.endDate, this.chosenLabel);\n\n      //if picker is attached to a text input, update it\n      this.updateElement();\n\n      $(document).off('.daterangepicker');\n      $(window).off('.daterangepicker');\n      this.container.hide();\n      this.element.trigger('hide.daterangepicker', this);\n      this.isShowing = false;\n    },\n\n    toggle: function(e) {\n      if (this.isShowing) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    },\n\n    outsideClick: function(e) {\n      var target = $(e.target);\n      // if the page is clicked anywhere except within the daterangerpicker/button\n      // itself then call this.hide()\n      if (\n        // ie modal dialog fix\n        e.type == \"focusin\" ||\n        target.closest(this.element).length ||\n        target.closest(this.container).length ||\n        target.closest('.calendar-table').length\n        ) return;\n      this.hide();\n      this.element.trigger('outsideClick.daterangepicker', this);\n    },\n\n    showCalendars: function() {\n      this.container.addClass('show-calendar');\n      this.container.removeClass('hidden');\n      this.move();\n      this.element.trigger('showCalendar.daterangepicker', this);\n    },\n\n    hideCalendars: function() {\n      this.container.removeClass('show-calendar');\n      this.container.addClass('hidden');\n      this.element.trigger('hideCalendar.daterangepicker', this);\n    },\n\n    hoverRange: function(e) {\n\n      //ignore mouse movements while an above-calendar text input has focus\n      if (this.container.find('input[name=daterangepicker_start]').is(\":focus\") || this.container.find('input[name=daterangepicker_end]').is(\":focus\"))\n        return;\n\n      var label = e.target.getAttribute('data-range-key');\n\n      if (label == this.locale.customRangeLabel) {\n        this.updateView();\n      } else {\n        var dates = this.ranges[label];\n        this.container.find('input[name=daterangepicker_start]').val(dates[0].format(this.locale.format));\n        this.container.find('input[name=daterangepicker_end]').val(dates[1].format(this.locale.format));\n      }\n\n    },\n\n    clickRange: function(e) {\n      var label = e.target.getAttribute('data-range-key');\n      this.chosenLabel = label;\n      if (label == this.locale.customRangeLabel) {\n        this.showCalendars();\n      } else {\n        var dates = this.ranges[label];\n        this.startDate = dates[0];\n        this.endDate = dates[1];\n\n        if (!this.timePicker) {\n          this.startDate.startOf('day');\n          this.endDate.endOf('day');\n        }\n\n        if (!this.alwaysShowCalendars)\n          this.hideCalendars();\n        this.clickApply();\n      }\n    },\n\n    clickPrev: function(e) {\n      var cal = $(e.target).parents('.calendar');\n      if (cal.hasClass('left')) {\n        this.leftCalendar.month.subtract(1, 'month');\n        if (this.linkedCalendars)\n          this.rightCalendar.month.subtract(1, 'month');\n      } else {\n        this.rightCalendar.month.subtract(1, 'month');\n      }\n      this.updateCalendars();\n    },\n\n    clickNext: function(e) {\n      var cal = $(e.target).parents('.calendar');\n      if (cal.hasClass('left')) {\n        this.leftCalendar.month.add(1, 'month');\n      } else {\n        this.rightCalendar.month.add(1, 'month');\n        if (this.linkedCalendars)\n          this.leftCalendar.month.add(1, 'month');\n      }\n      this.updateCalendars();\n    },\n\n    hoverDate: function(e) {\n\n      //ignore mouse movements while an above-calendar text input has focus\n      //if (this.container.find('input[name=daterangepicker_start]').is(\":focus\") || this.container.find('input[name=daterangepicker_end]').is(\":focus\"))\n      //    return;\n\n      //ignore dates that can't be selected\n      if (!$(e.target).hasClass('available')) return;\n\n      //have the text inputs above calendars reflect the date being hovered over\n      var title = $(e.target).attr('data-title');\n      var row = title.substr(1, 1);\n      var col = title.substr(3, 1);\n      var cal = $(e.target).parents('.calendar');\n      var date = cal.hasClass('left') ? this.leftCalendar.calendar[row][col] : this.rightCalendar.calendar[row][col];\n\n      if (this.endDate && !this.container.find('input[name=daterangepicker_start]').is(\":focus\")) {\n        this.container.find('input[name=daterangepicker_start]').val(date.format(this.locale.format));\n      } else if (!this.endDate && !this.container.find('input[name=daterangepicker_end]').is(\":focus\")) {\n        this.container.find('input[name=daterangepicker_end]').val(date.format(this.locale.format));\n      }\n\n      //highlight the dates between the start date and the date being hovered as a potential end date\n      var leftCalendar = this.leftCalendar;\n      var rightCalendar = this.rightCalendar;\n      var startDate = this.startDate;\n      if (!this.endDate) {\n        this.container.find('.calendar tbody td').each(function(index, el) {\n\n          //skip week numbers, only look at dates\n          if ($(el).hasClass('week')) return;\n\n          var title = $(el).attr('data-title');\n          var row = title.substr(1, 1);\n          var col = title.substr(3, 1);\n          var cal = $(el).parents('.calendar');\n          var dt = cal.hasClass('left') ? leftCalendar.calendar[row][col] : rightCalendar.calendar[row][col];\n\n          if ((dt.isAfter(startDate) && dt.isBefore(date)) || dt.isSame(date, 'day')) {\n            $(el).addClass('in-range');\n          } else {\n            $(el).removeClass('in-range');\n          }\n\n        });\n      }\n\n    },\n\n    clickDate: function(e) {\n\n      if (!$(e.target).hasClass('available')) return;\n\n      var title = $(e.target).attr('data-title');\n      var row = title.substr(1, 1);\n      var col = title.substr(3, 1);\n      var cal = $(e.target).parents('.calendar');\n      var date = cal.hasClass('left') ? this.leftCalendar.calendar[row][col] : this.rightCalendar.calendar[row][col];\n\n      //\n      // this function needs to do a few things:\n      // * alternate between selecting a start and end date for the range,\n      // * if the time picker is enabled, apply the hour/minute/second from the select boxes to the clicked date\n      // * if autoapply is enabled, and an end date was chosen, apply the selection\n      // * if single date picker mode, and time picker isn't enabled, apply the selection immediately\n      // * if one of the inputs above the calendars was focused, cancel that manual input\n      //\n\n      if (this.endDate || date.isBefore(this.startDate, 'day')) { //picking start\n        if (this.timePicker) {\n          var hour = parseInt(this.container.find('.left .hourselect').val(), 10);\n          if (!this.timePicker24Hour) {\n              var ampm = this.container.find('.left .ampmselect').val();\n              if (ampm === 'PM' && hour < 12)\n                  hour += 12;\n              if (ampm === 'AM' && hour === 12)\n                  hour = 0;\n          }\n          var minute = parseInt(this.container.find('.left .minuteselect').val(), 10);\n          var second = this.timePickerSeconds ? parseInt(this.container.find('.left .secondselect').val(), 10) : 0;\n          date = date.clone().hour(hour).minute(minute).second(second);\n        }\n        this.endDate = null;\n        this.setStartDate(date.clone());\n      } else if (!this.endDate && date.isBefore(this.startDate)) {\n        //special case: clicking the same date for start/end,\n        //but the time of the end date is before the start date\n        this.setEndDate(this.startDate.clone());\n      } else { // picking end\n        if (this.timePicker) {\n          var hour = parseInt(this.container.find('.right .hourselect').val(), 10);\n          if (!this.timePicker24Hour) {\n              var ampm = this.container.find('.right .ampmselect').val();\n              if (ampm === 'PM' && hour < 12)\n                  hour += 12;\n              if (ampm === 'AM' && hour === 12)\n                  hour = 0;\n          }\n          var minute = parseInt(this.container.find('.right .minuteselect').val(), 10);\n          var second = this.timePickerSeconds ? parseInt(this.container.find('.right .secondselect').val(), 10) : 0;\n          date = date.clone().hour(hour).minute(minute).second(second);\n        }\n        this.setEndDate(date.clone());\n        if (this.autoApply) {\n          this.calculateChosenLabel();\n          this.clickApply();\n        }\n      }\n\n      if (this.singleDatePicker) {\n          this.setEndDate(this.startDate);\n          if (!this.timePicker)\n              this.clickApply();\n      }\n\n      this.updateView();\n\n      //This is to cancel the blur event handler if the mouse was in one of the inputs\n      e.stopPropagation();\n\n    },\n\n    calculateChosenLabel: function () {\n      var customRange = true;\n      var i = 0;\n      for (var range in this.ranges) {\n        if (this.timePicker) {\n          var format = this.timePickerSeconds ? \"YYYY-MM-DD hh:mm:ss\" : \"YYYY-MM-DD hh:mm\";\n          //ignore times when comparing dates if time picker seconds is not enabled\n          if (this.startDate.format(format) == this.ranges[range][0].format(format) && this.endDate.format(format) == this.ranges[range][1].format(format)) {\n              customRange = false;\n              this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')').addClass('active').html();\n              break;\n          }\n        } else {\n          //ignore times when comparing dates if time picker is not enabled\n          if (this.startDate.format('YYYY-MM-DD') == this.ranges[range][0].format('YYYY-MM-DD') && this.endDate.format('YYYY-MM-DD') == this.ranges[range][1].format('YYYY-MM-DD')) {\n              customRange = false;\n              this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')').addClass('active').html();\n              break;\n          }\n        }\n        i++;\n      }\n      if (customRange) {\n        if (this.showCustomRangeLabel) {\n          this.chosenLabel = this.container.find('.ranges li:last').addClass('active').html();\n        } else {\n          this.chosenLabel = null;\n        }\n        this.showCalendars();\n      }\n    },\n\n    clickApply: function(e) {\n      this.hide();\n      this.element.trigger('apply.daterangepicker', this);\n    },\n\n    clickCancel: function(e) {\n      this.startDate = this.oldStartDate;\n      this.endDate = this.oldEndDate;\n      this.container.hide();\n      this.element.trigger('cancel.daterangepicker', this);\n    },\n\n    monthOrYearChanged: function(e) {\n      var isLeft = $(e.target).closest('.calendar').hasClass('left'),\n          leftOrRight = isLeft ? 'left' : 'right',\n          cal = this.container.find('.calendar.'+leftOrRight);\n\n      // Month must be Number for new moment versions\n      var month = parseInt(cal.find('.monthselect').val(), 10);\n      var year = cal.find('.yearselect').val();\n\n      if (!isLeft) {\n        if (year < this.startDate.year() || (year == this.startDate.year() && month < this.startDate.month())) {\n            month = this.startDate.month();\n            year = this.startDate.year();\n        }\n      }\n\n      if (this.minDate) {\n        if (year < this.minDate.year() || (year == this.minDate.year() && month < this.minDate.month())) {\n            month = this.minDate.month();\n            year = this.minDate.year();\n        }\n      }\n\n      if (this.maxDate) {\n        if (year > this.maxDate.year() || (year == this.maxDate.year() && month > this.maxDate.month())) {\n            month = this.maxDate.month();\n            year = this.maxDate.year();\n        }\n      }\n\n      if (isLeft) {\n        this.leftCalendar.month.month(month).year(year);\n        if (this.linkedCalendars)\n            this.rightCalendar.month = this.leftCalendar.month.clone().add(1, 'month');\n      } else {\n        this.rightCalendar.month.month(month).year(year);\n        if (this.linkedCalendars)\n            this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, 'month');\n      }\n      this.updateCalendars();\n    },\n\n    timeChanged: function(e) {\n      var cal = $(e.target).closest('.calendar'),\n          isLeft = cal.hasClass('left');\n\n      var hour = parseInt(cal.find('.hourselect').val(), 10);\n      var minute = parseInt(cal.find('.minuteselect').val(), 10);\n      var second = this.timePickerSeconds ? parseInt(cal.find('.secondselect').val(), 10) : 0;\n\n      if (!this.timePicker24Hour) {\n        var ampm = cal.find('.ampmselect').val();\n        if (ampm === 'PM' && hour < 12)\n          hour += 12;\n        if (ampm === 'AM' && hour === 12)\n          hour = 0;\n      }\n\n      if (isLeft) {\n        var start = this.startDate.clone();\n        start.hour(hour);\n        start.minute(minute);\n        start.second(second);\n        this.setStartDate(start);\n        if (this.singleDatePicker) {\n          this.endDate = this.startDate.clone();\n        } else if (this.endDate && this.endDate.format('YYYY-MM-DD') == start.format('YYYY-MM-DD') && this.endDate.isBefore(start)) {\n          this.setEndDate(start.clone());\n        }\n      } else if (this.endDate) {\n        var end = this.endDate.clone();\n        end.hour(hour);\n        end.minute(minute);\n        end.second(second);\n        this.setEndDate(end);\n      }\n\n      //update the calendars so all clickable dates reflect the new time component\n      this.updateCalendars();\n\n      //update the form inputs above the calendars with the new time\n      this.updateFormInputs();\n\n      //re-render the time pickers because changing one selection can affect what's enabled in another\n      this.renderTimePicker('left');\n      this.renderTimePicker('right');\n    },\n\n    formInputsChanged: function(e) {\n      var isRight = $(e.target).closest('.calendar').hasClass('right');\n      var start = moment(this.container.find('input[name=\"daterangepicker_start\"]').val(), this.locale.format);\n      var end = moment(this.container.find('input[name=\"daterangepicker_end\"]').val(), this.locale.format);\n\n      if (start.isValid() && end.isValid()) {\n        if (isRight && end.isBefore(start))\n            start = end.clone();\n\n        this.setStartDate(start);\n        this.setEndDate(end);\n\n        if (isRight) {\n            this.container.find('input[name=\"daterangepicker_start\"]').val(this.startDate.format(this.locale.format));\n        } else {\n            this.container.find('input[name=\"daterangepicker_end\"]').val(this.endDate.format(this.locale.format));\n        }\n      }\n\n      this.updateView();\n    },\n\n    formInputsFocused: function(e) {\n      // Highlight the focused input\n      this.container.find('input[name=\"daterangepicker_start\"], input[name=\"daterangepicker_end\"]').removeClass('active');\n      $(e.target).addClass('active');\n\n      // Set the state such that if the user goes back to using a mouse,\n      // the calendars are aware we're selecting the end of the range, not\n      // the start. This allows someone to edit the end of a date range without\n      // re-selecting the beginning, by clicking on the end date input then\n      // using the calendar.\n      var isRight = $(e.target).closest('.calendar').hasClass('right');\n      if (isRight) {\n        this.endDate = null;\n        this.setStartDate(this.startDate.clone());\n        this.updateView();\n      }\n    },\n\n    formInputsBlurred: function(e) {\n      // this function has one purpose right now: if you tab from the first\n      // text input to the second in the UI, the endDate is nulled so that\n      // you can click another, but if you tab out without clicking anything\n      // or changing the input value, the old endDate should be retained\n\n      if (!this.endDate) {\n        var val = this.container.find('input[name=\"daterangepicker_end\"]').val();\n        var end = moment(val, this.locale.format);\n        if (end.isValid()) {\n          this.setEndDate(end);\n          this.updateView();\n        }\n      }\n    },\n\n    formInputsKeydown: function(e) {\n      // This function ensures that if the 'enter' key was pressed in the input, then the calendars\n      // are updated with the startDate and endDate.\n      // This behaviour is automatic in Chrome/Firefox/Edge but not in IE 11 hence why this exists.\n      // Other browsers and versions of IE are untested and the behaviour is unknown.\n      if (e.keyCode === 13) {\n        // Prevent the calendar from being updated twice on Chrome/Firefox/Edge\n        e.preventDefault();\n        this.formInputsChanged(e);\n      }\n    },\n\n    elementChanged: function() {\n      if (!this.element.is('input')) return;\n      if (!this.element.val().length) return;\n\n      var dateString = this.element.val().split(this.locale.separator),\n        start = null,\n        end = null;\n\n      if (dateString.length === 2) {\n        start = moment(dateString[0], this.locale.format);\n        end = moment(dateString[1], this.locale.format);\n      }\n\n      if (this.singleDatePicker || start === null || end === null) {\n        start = moment(this.element.val(), this.locale.format);\n        end = start;\n      }\n\n      if (!start.isValid() || !end.isValid()) return;\n\n      this.setStartDate(start);\n      this.setEndDate(end);\n      this.updateView();\n    },\n\n    keydown: function(e) {\n      //hide on tab or enter\n      if ((e.keyCode === 9) || (e.keyCode === 13)) {\n        this.hide();\n      }\n\n      //hide on esc and prevent propagation\n      if (e.keyCode === 27) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.hide();\n      }\n    },\n\n    updateElement: function() {\n      if (this.element.is('input') && !this.singleDatePicker && this.autoUpdateInput) {\n        this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format));\n        this.element.trigger('change');\n      } else if (this.element.is('input') && this.autoUpdateInput) {\n        this.element.val(this.startDate.format(this.locale.format));\n        this.element.trigger('change');\n      }\n    },\n\n    remove: function() {\n      this.container.remove();\n      this.element.off('.daterangepicker');\n      this.element.removeData();\n    }\n\n  };\n\n  $.fn.daterangepicker = function(options, callback) {\n    var implementOptions = $.extend(true, {}, $.fn.daterangepicker.defaultOptions, options);\n    this.each(function() {\n      var el = $(this);\n      if (el.data('daterangepicker'))\n        el.data('daterangepicker').remove();\n      el.data('daterangepicker', new DateRangePicker(el, implementOptions, callback));\n    });\n    return this;\n  };\n\n  return DateRangePicker;\n})();\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/styles/daterangepicker.scss":
/*!*****************************************!*\
  !*** ./src/styles/daterangepicker.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!../../node_modules/sass-loader/lib/loader.js!./daterangepicker.scss */ \"./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/styles/daterangepicker.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/styles/daterangepicker.scss?");

/***/ })

/******/ });